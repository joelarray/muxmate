{% set playbackId = playbackId ?? null %}
{% set token = token ?? null %}
{% set inline = inline ?? false %}
{% set lazyload = lazyload ?? false %}
{% set nonce = nonce ?? null %}
{% set maxResolution = maxResolution ?? false %}

{% if playbackId %}

    {% set attributes = {
        'playback-id': playbackId ~ (token ? "?token=#{token}"),
        'metadata-video-title': video.title,
        'metadata-video-id': video.uid,
        'max-resolution': maxResolution
    } %}

    {% if inline %}
        {% set attributes = attributes|merge({
            autoplay: 'muted',
            loop: true,
            muted: true,
            playsinline: true,
            disablePictureInPicture: true
        }) %}
    {% endif %}

    {% apply attr(attributes) %}
        <mux-video></mux-video>
    {% endapply %}

    {% css %}
        mux-video { display: block; }
    {% endcss %}

    {% set muxVideoUrl = muxVideoUrl ?? null %}

    {% if muxVideoUrl %}
        {% if nonce %}
            {% set nonce = '%%%MUXMATE_NONCE_PLACEHOLDER%%%' %}
        {% endif %}
        {% if lazyload %}
            {% script with { nonce } %}
                document.addEventListener('DOMContentLoaded', () => {
                    let muxVideoLoaded = false;
                    let observer = new IntersectionObserver(entries => {
                        entries.forEach(({isIntersecting}) => {
                            if (!isIntersecting || muxVideoLoaded) {
                                return;
                            }
                            muxVideoLoaded = true;
                            const script = document.createElement('script');
                            script.src = '{{ muxVideoUrl }}';
                            script.async = true;
                            document.body.appendChild(script);
                            observer.disconnect();
                            observer = null;
                        });
                    });
                    document.body.querySelectorAll('mux-video').forEach(muxVideo => observer.observe(muxVideo));
                });
            {% endscript %}
        {% else %}
            {% js muxVideoUrl with { async: true, nonce } %}
        {% endif %}
    {% endif %}

{% endif %}
